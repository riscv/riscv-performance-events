[
    {
        "MetricName": "TOPDOWN.SLOTS",
        "BriefDescription": "For implementations which do not provide TOPDOWN.SLOTS as explicit event it is possible to calculate it as metric using CYCLES.HART event.",
        "PublicDescription": "For implementations which do not provide TOPDOWN.SLOTS as explicit event it is possible to calculate it as metric using CYCLES.HART event.",
        "MetricExpr": "pipeline_width * CYCLES.HART"
    },
    {
        "MetricName": "TOPDOWN.BAD_SPECULATION.SLOTS",
        "BriefDescription": "For implementations which do not provide TOPDOWN.BAD_SPECULATION.SLOTS as explicit event it is possible to calculate it as metric. It consiste of two part - the number of cancelled operations (UOP.SPEC - UOP.RET) and the number of slots wasted on recovery from pipeline flush (pipeline_width * PRD.PIPELINE_FLUSH.RECOVERY_CYCLES)",
        "MetricExpr": "UOP.SPEC - UOP.RET + pipeline_width * PRD.PIPELINE_FLUSH.RECOVERY_CYCLES"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.CORE.SLOTS",
        "BriefDescription": "For implementations which do not provide TOPDOWN.BACKEND_BOUND.CORE.SLOTS as explicit event it is possible to calculate it as metric by subtracting memory bound slots from all backend bound slots",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.SLOTS - TOPDOWN.BACKEND_BOUND.MEMORY.SLOTS"
    },
    {
        "MetricName": "TOPDOWN.BAD_SPECULATION",
        "BriefDescription": "Fraction of slots wasted due to incorrect speculations",
        "MetricExpr": "TOPDOWN.BAD_SPECULATION.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BAD_SPECULATION > 0.15",
        "PublicDescription": "Fraction of slots wasted due to incorrect speculations. This include slots used to issue uops that do not eventually get retired and slots for which the issue-pipeline was blocked due to recovery from earlier incorrect speculation.",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BAD_SPECULATION.MISPRED.RATE",
        "BriefDescription": "Fraction of slots wasted due to incorrect control flow speculations",
        "MetricExpr": "TOPDOWN.BAD_SPECULATION.MISPRED.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BAD_SPECULATION.MISPRED.RATE > 0.1",
        "PublicDescription": "Fraction of slots wasted due to incorrect control flow speculations",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BAD_SPECULATION.MEM_ORDERING.RATE",
        "BriefDescription": "Fraction of slots wasted due to memory ordering violations",
        "MetricExpr": "TOPDOWN.BAD_SPECULATION.MEM_ORDERING.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BAD_SPECULATION.MEM_ORDERING.RATE > 0.1",
        "PublicDescription": "Fraction of slots wasted due to memory ordering violations",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BAD_SPECULATION.OTHER.RATE",
        "BriefDescription": "Fraction of slots wasted due to reasons other than control flow mis-speculations or memory ordering violations",
        "MetricExpr": "TOPDOWN.BAD_SPECULATION.MEM_ORDERING.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BAD_SPECULATION.OTHER.RATE > 0.1",
        "PublicDescription": "Fraction of slots wasted due to reasons other than control flow mis-speculations or memory ordering violations",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.FRONTEND_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the frontend did not supply enough operations",
        "MetricExpr": "TOPDOWN.FRONTEND_BOUND.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.FRONTEND_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots unused due to the frontend did not supply enough operations. Frontend Bound denotes unutilized slots when there is no Backend stall - i.e. when Frontend delivered no uops while Backend could have accepted them. For example, stalls due to instruction cache misses would be categorized under Frontend Bound.",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.RETIRING.RATE",
        "BriefDescription": "Fraction of slots utilized by useful work i.e. issued uops that eventually get retired",
        "MetricExpr": "UOP.RET / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.RETIRING.RATE > 0.75",
        "PublicDescription": "Fraction of slots utilized by useful work i.e. issued uops that eventually get retired. Ideally all pipeline slots would be attributed to the Retiring category. Retiring of 100% would indicate the maximum Pipeline_Width throughput was achieved. Maximizing Retiring typically increases the Instructions-per-cycle (IPC).",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the due to lack of backend resources",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots unused due to the due to lack of backend resources. Backend Bound denotes unutilized slots due to a lack of required resources for accepting new uops in the Backend.",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the memory subsystem stalls inside the backend",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.MEMORY.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots unused due to the memory subsystem stalls inside the backend. Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two).",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.CORE_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the memory subsystem stalls inside the backend",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.CORE.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.CORE_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots unused due to the non-memory stalls inside the backend. Shortage in hardware compute resources or dependencies in software instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. chained long-latency arithmetic operations).",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.CORE.SERIALIZING.RATE",
        "BriefDescription": "Fraction of slots unused due to serializing operations like fence or csr accesses",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.CORE.SERIALIZING.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.CORE.SERIALIZING.RATE > 0.1",
        "PublicDescription": "Fraction of slots unused due to serializing operations like fence or csr accesses.",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.RATE",
        "BriefDescription": "Fraction of slots wasted while waiting for address generation and translation",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.MEMORY.ADDR.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots wasted while waiting for address generation and translation",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.TLB_L1_BOUND.RATE",
        "BriefDescription": "Fraction of slots wasted while waiting for address translation without missing L1 TLB",
        "MetricExpr": "(TOPDOWN.BACKEND_BOUND.MEMORY.ADDR.SLOTS - TOPDOWN.BACKEND_BOUND.MEMORY.ADDR.TLB.L1_MISS.SLOTS) / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.TLB_L1_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots wasted while waiting for address generation without missing L1 TLB",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.TLB_L2_BOUND.RATE",
        "BriefDescription": "Fraction of slots wasted while waiting for address translation which hit L2 TLB",
        "MetricExpr": "(TOPDOWN.BACKEND_BOUND.MEMORY.ADDR.TLB.L1_MISS.SLOTS - TOPDOWN.BACKEND_BOUND.MEMORY.ADDR.TLB.L2_MISS.SLOTS) / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.TLB_L2_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots wasted while waiting for address generation which hit L2 TLB",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.PAGE_WALK_BOUND.RATE",
        "BriefDescription": "Fraction of slots wasted while waiting for address translation which needed page walk (missed all TLB levels)",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.MEMORY.ADDR.TLB.L2_MISS.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.ADDR_BOUND.PAGE_WALK_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots wasted while waiting for address translation which needed page walk (missed all TLB levels)",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.RATE",
        "BriefDescription": "Fraction of slots wasted while waiting for data",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.MEMORY.DATA.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.RATE > 0.15",
        "PublicDescription": "Fraction of slots wasted while waiting for data",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.L1_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from L1 data cache",
        "MetricExpr": "(TOPDOWN.BACKEND_BOUND.MEMORY.DATA.SLOTS - TOPDOWN.BACKEND_BOUND.MEMORY.DATA.L1_MISS.SLOTS) / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.L1_BOUND.RATE > 0.1",
        "PublicDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from L1 data cache",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.L2_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from L2 cache",
        "MetricExpr": "(TOPDOWN.BACKEND_BOUND.MEMORY.DATA.L1_MISS.SLOTS - TOPDOWN.BACKEND_BOUND.MEMORY.DATA.L2_MISS.SLOTS) / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.L2_BOUND.RATE > 0.1",
        "PublicDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from L2 cache",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.L3_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from L3 cache",
        "MetricExpr": "(TOPDOWN.BACKEND_BOUND.MEMORY.DATA.L2_MISS.SLOTS - TOPDOWN.BACKEND_BOUND.MEMORY.DATA.L3_MISS.SLOTS) / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.L3_BOUND.RATE > 0.1",
        "PublicDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from L3 cache",
        "ScaleUnit": "100%"
    },
    {
        "MetricName": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.EXTERNAL_MEM_BOUND.RATE",
        "BriefDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from external memory",
        "MetricExpr": "TOPDOWN.BACKEND_BOUND.MEMORY.DATA.L3_MISS.SLOTS / TOPDOWN.SLOTS",
        "MetricThreshold": "TOPDOWN.BACKEND_BOUND.MEMORY_BOUND.DATA_BOUND.EXTERNAL_MEM_BOUND.RATE > 0.1",
        "PublicDescription": "Fraction of slots unused due to the stalls caused by load instructions which got data from external memory",
        "ScaleUnit": "100%"
    }
]